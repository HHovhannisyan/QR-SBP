// Generated by view binder compiler. Do not edit!
package ru.mertech.sbpskb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mertech.sbpskb.R;

public final class ActivityOperationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView amountTvOperation;

  @NonNull
  public final TextView commissionTvOperation;

  @NonNull
  public final TextView operationDateTvOperation;

  @NonNull
  public final TextView operationIdTvOperation;

  @NonNull
  public final TextView payerBankIdTvOperation;

  @NonNull
  public final TextView payerBankNameTvOperation;

  @NonNull
  public final TextView payerNameTvOperation;

  @NonNull
  public final TextView statusOperationTvOperation;

  @NonNull
  public final TextView titleTvLk;

  @NonNull
  public final Button toOperationsListBtnOperation;

  @NonNull
  public final TextView typeOperationTvOperation;

  private ActivityOperationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView amountTvOperation, @NonNull TextView commissionTvOperation,
      @NonNull TextView operationDateTvOperation, @NonNull TextView operationIdTvOperation,
      @NonNull TextView payerBankIdTvOperation, @NonNull TextView payerBankNameTvOperation,
      @NonNull TextView payerNameTvOperation, @NonNull TextView statusOperationTvOperation,
      @NonNull TextView titleTvLk, @NonNull Button toOperationsListBtnOperation,
      @NonNull TextView typeOperationTvOperation) {
    this.rootView = rootView;
    this.amountTvOperation = amountTvOperation;
    this.commissionTvOperation = commissionTvOperation;
    this.operationDateTvOperation = operationDateTvOperation;
    this.operationIdTvOperation = operationIdTvOperation;
    this.payerBankIdTvOperation = payerBankIdTvOperation;
    this.payerBankNameTvOperation = payerBankNameTvOperation;
    this.payerNameTvOperation = payerNameTvOperation;
    this.statusOperationTvOperation = statusOperationTvOperation;
    this.titleTvLk = titleTvLk;
    this.toOperationsListBtnOperation = toOperationsListBtnOperation;
    this.typeOperationTvOperation = typeOperationTvOperation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOperationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOperationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_operation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOperationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountTvOperation;
      TextView amountTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (amountTvOperation == null) {
        break missingId;
      }

      id = R.id.commissionTvOperation;
      TextView commissionTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (commissionTvOperation == null) {
        break missingId;
      }

      id = R.id.operationDateTvOperation;
      TextView operationDateTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (operationDateTvOperation == null) {
        break missingId;
      }

      id = R.id.operationIdTvOperation;
      TextView operationIdTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (operationIdTvOperation == null) {
        break missingId;
      }

      id = R.id.payerBankIdTvOperation;
      TextView payerBankIdTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (payerBankIdTvOperation == null) {
        break missingId;
      }

      id = R.id.payerBankNameTvOperation;
      TextView payerBankNameTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (payerBankNameTvOperation == null) {
        break missingId;
      }

      id = R.id.payerNameTvOperation;
      TextView payerNameTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (payerNameTvOperation == null) {
        break missingId;
      }

      id = R.id.statusOperationTvOperation;
      TextView statusOperationTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (statusOperationTvOperation == null) {
        break missingId;
      }

      id = R.id.titleTvLk;
      TextView titleTvLk = ViewBindings.findChildViewById(rootView, id);
      if (titleTvLk == null) {
        break missingId;
      }

      id = R.id.toOperationsListBtnOperation;
      Button toOperationsListBtnOperation = ViewBindings.findChildViewById(rootView, id);
      if (toOperationsListBtnOperation == null) {
        break missingId;
      }

      id = R.id.typeOperationTvOperation;
      TextView typeOperationTvOperation = ViewBindings.findChildViewById(rootView, id);
      if (typeOperationTvOperation == null) {
        break missingId;
      }

      return new ActivityOperationBinding((ConstraintLayout) rootView, amountTvOperation,
          commissionTvOperation, operationDateTvOperation, operationIdTvOperation,
          payerBankIdTvOperation, payerBankNameTvOperation, payerNameTvOperation,
          statusOperationTvOperation, titleTvLk, toOperationsListBtnOperation,
          typeOperationTvOperation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
