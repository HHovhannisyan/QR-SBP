// Generated by view binder compiler. Do not edit!
package ru.mertech.sbpskb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mertech.sbpskb.R;

public final class ActivityOperationsListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView errorMessageTvOperationsList;

  @NonNull
  public final RecyclerView operationsListRV;

  @NonNull
  public final ProgressBar progressBarOperationsList;

  @NonNull
  public final TextView waitMessageTvOperationsList;

  private ActivityOperationsListBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView errorMessageTvOperationsList, @NonNull RecyclerView operationsListRV,
      @NonNull ProgressBar progressBarOperationsList,
      @NonNull TextView waitMessageTvOperationsList) {
    this.rootView = rootView;
    this.errorMessageTvOperationsList = errorMessageTvOperationsList;
    this.operationsListRV = operationsListRV;
    this.progressBarOperationsList = progressBarOperationsList;
    this.waitMessageTvOperationsList = waitMessageTvOperationsList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOperationsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOperationsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_operations_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOperationsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.errorMessageTvOperationsList;
      TextView errorMessageTvOperationsList = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageTvOperationsList == null) {
        break missingId;
      }

      id = R.id.operationsListRV;
      RecyclerView operationsListRV = ViewBindings.findChildViewById(rootView, id);
      if (operationsListRV == null) {
        break missingId;
      }

      id = R.id.progressBarOperationsList;
      ProgressBar progressBarOperationsList = ViewBindings.findChildViewById(rootView, id);
      if (progressBarOperationsList == null) {
        break missingId;
      }

      id = R.id.waitMessageTvOperationsList;
      TextView waitMessageTvOperationsList = ViewBindings.findChildViewById(rootView, id);
      if (waitMessageTvOperationsList == null) {
        break missingId;
      }

      return new ActivityOperationsListBinding((ConstraintLayout) rootView,
          errorMessageTvOperationsList, operationsListRV, progressBarOperationsList,
          waitMessageTvOperationsList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
