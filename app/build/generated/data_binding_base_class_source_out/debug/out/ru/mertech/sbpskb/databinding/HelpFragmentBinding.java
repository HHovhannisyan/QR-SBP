// Generated by view binder compiler. Do not edit!
package ru.mertech.sbpskb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mertech.sbpskb.R;

public final class HelpFragmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView backTxt;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final LinearLayout dialogHelpRoot;

  @NonNull
  public final EditText edittxtAddress;

  @NonNull
  public final EditText edittxtComment;

  @NonNull
  public final EditText edittxtInn;

  @NonNull
  public final EditText edittxtPhone;

  private HelpFragmentBinding(@NonNull LinearLayout rootView, @NonNull TextView backTxt,
      @NonNull Button btnSend, @NonNull LinearLayout dialogHelpRoot,
      @NonNull EditText edittxtAddress, @NonNull EditText edittxtComment,
      @NonNull EditText edittxtInn, @NonNull EditText edittxtPhone) {
    this.rootView = rootView;
    this.backTxt = backTxt;
    this.btnSend = btnSend;
    this.dialogHelpRoot = dialogHelpRoot;
    this.edittxtAddress = edittxtAddress;
    this.edittxtComment = edittxtComment;
    this.edittxtInn = edittxtInn;
    this.edittxtPhone = edittxtPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HelpFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HelpFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.help_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HelpFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_txt;
      TextView backTxt = ViewBindings.findChildViewById(rootView, id);
      if (backTxt == null) {
        break missingId;
      }

      id = R.id.btn_send;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      LinearLayout dialogHelpRoot = (LinearLayout) rootView;

      id = R.id.edittxt_address;
      EditText edittxtAddress = ViewBindings.findChildViewById(rootView, id);
      if (edittxtAddress == null) {
        break missingId;
      }

      id = R.id.edittxt_comment;
      EditText edittxtComment = ViewBindings.findChildViewById(rootView, id);
      if (edittxtComment == null) {
        break missingId;
      }

      id = R.id.edittxt_inn;
      EditText edittxtInn = ViewBindings.findChildViewById(rootView, id);
      if (edittxtInn == null) {
        break missingId;
      }

      id = R.id.edittxt_phone;
      EditText edittxtPhone = ViewBindings.findChildViewById(rootView, id);
      if (edittxtPhone == null) {
        break missingId;
      }

      return new HelpFragmentBinding((LinearLayout) rootView, backTxt, btnSend, dialogHelpRoot,
          edittxtAddress, edittxtComment, edittxtInn, edittxtPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
