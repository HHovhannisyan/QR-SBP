// Generated by view binder compiler. Do not edit!
package ru.mertech.sbpskb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mertech.sbpskb.R;

public final class DialogPinCodeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText newPinCodeAgainEtDialog;

  @NonNull
  public final TextView newPinCodeAgainTvDialog;

  @NonNull
  public final EditText newPinCodeEtDialog;

  @NonNull
  public final TextView newPinCodeTvDialog;

  @NonNull
  public final EditText pinCodeEtDialog;

  @NonNull
  public final TextView pinCodeTvDialog;

  @NonNull
  public final LinearLayout setPinCodeDialogRoot;

  private DialogPinCodeBinding(@NonNull LinearLayout rootView,
      @NonNull EditText newPinCodeAgainEtDialog, @NonNull TextView newPinCodeAgainTvDialog,
      @NonNull EditText newPinCodeEtDialog, @NonNull TextView newPinCodeTvDialog,
      @NonNull EditText pinCodeEtDialog, @NonNull TextView pinCodeTvDialog,
      @NonNull LinearLayout setPinCodeDialogRoot) {
    this.rootView = rootView;
    this.newPinCodeAgainEtDialog = newPinCodeAgainEtDialog;
    this.newPinCodeAgainTvDialog = newPinCodeAgainTvDialog;
    this.newPinCodeEtDialog = newPinCodeEtDialog;
    this.newPinCodeTvDialog = newPinCodeTvDialog;
    this.pinCodeEtDialog = pinCodeEtDialog;
    this.pinCodeTvDialog = pinCodeTvDialog;
    this.setPinCodeDialogRoot = setPinCodeDialogRoot;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPinCodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPinCodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_pin_code, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPinCodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.newPinCodeAgainEtDialog;
      EditText newPinCodeAgainEtDialog = ViewBindings.findChildViewById(rootView, id);
      if (newPinCodeAgainEtDialog == null) {
        break missingId;
      }

      id = R.id.newPinCodeAgainTvDialog;
      TextView newPinCodeAgainTvDialog = ViewBindings.findChildViewById(rootView, id);
      if (newPinCodeAgainTvDialog == null) {
        break missingId;
      }

      id = R.id.newPinCodeEtDialog;
      EditText newPinCodeEtDialog = ViewBindings.findChildViewById(rootView, id);
      if (newPinCodeEtDialog == null) {
        break missingId;
      }

      id = R.id.newPinCodeTvDialog;
      TextView newPinCodeTvDialog = ViewBindings.findChildViewById(rootView, id);
      if (newPinCodeTvDialog == null) {
        break missingId;
      }

      id = R.id.pinCodeEtDialog;
      EditText pinCodeEtDialog = ViewBindings.findChildViewById(rootView, id);
      if (pinCodeEtDialog == null) {
        break missingId;
      }

      id = R.id.pinCodeTvDialog;
      TextView pinCodeTvDialog = ViewBindings.findChildViewById(rootView, id);
      if (pinCodeTvDialog == null) {
        break missingId;
      }

      LinearLayout setPinCodeDialogRoot = (LinearLayout) rootView;

      return new DialogPinCodeBinding((LinearLayout) rootView, newPinCodeAgainEtDialog,
          newPinCodeAgainTvDialog, newPinCodeEtDialog, newPinCodeTvDialog, pinCodeEtDialog,
          pinCodeTvDialog, setPinCodeDialogRoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
