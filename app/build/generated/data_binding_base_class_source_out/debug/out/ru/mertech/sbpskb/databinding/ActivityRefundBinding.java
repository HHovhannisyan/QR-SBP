// Generated by view binder compiler. Do not edit!
package ru.mertech.sbpskb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mertech.sbpskb.R;

public final class ActivityRefundBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView amountTvRefund;

  @NonNull
  public final Button newPaymentBtnRefund;

  @NonNull
  public final ProgressBar progressBarRefund;

  @NonNull
  public final Button refundTransferBtnRefund;

  @NonNull
  public final ImageView resultIvRefund;

  @NonNull
  public final TextView resultTvRefund;

  @NonNull
  public final TextView tvRefund;

  @NonNull
  public final TextView waitMessageRefund;

  private ActivityRefundBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView amountTvRefund, @NonNull Button newPaymentBtnRefund,
      @NonNull ProgressBar progressBarRefund, @NonNull Button refundTransferBtnRefund,
      @NonNull ImageView resultIvRefund, @NonNull TextView resultTvRefund,
      @NonNull TextView tvRefund, @NonNull TextView waitMessageRefund) {
    this.rootView = rootView;
    this.amountTvRefund = amountTvRefund;
    this.newPaymentBtnRefund = newPaymentBtnRefund;
    this.progressBarRefund = progressBarRefund;
    this.refundTransferBtnRefund = refundTransferBtnRefund;
    this.resultIvRefund = resultIvRefund;
    this.resultTvRefund = resultTvRefund;
    this.tvRefund = tvRefund;
    this.waitMessageRefund = waitMessageRefund;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRefundBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRefundBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_refund, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRefundBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountTvRefund;
      TextView amountTvRefund = ViewBindings.findChildViewById(rootView, id);
      if (amountTvRefund == null) {
        break missingId;
      }

      id = R.id.newPaymentBtnRefund;
      Button newPaymentBtnRefund = ViewBindings.findChildViewById(rootView, id);
      if (newPaymentBtnRefund == null) {
        break missingId;
      }

      id = R.id.progressBarRefund;
      ProgressBar progressBarRefund = ViewBindings.findChildViewById(rootView, id);
      if (progressBarRefund == null) {
        break missingId;
      }

      id = R.id.refundTransferBtnRefund;
      Button refundTransferBtnRefund = ViewBindings.findChildViewById(rootView, id);
      if (refundTransferBtnRefund == null) {
        break missingId;
      }

      id = R.id.resultIvRefund;
      ImageView resultIvRefund = ViewBindings.findChildViewById(rootView, id);
      if (resultIvRefund == null) {
        break missingId;
      }

      id = R.id.resultTvRefund;
      TextView resultTvRefund = ViewBindings.findChildViewById(rootView, id);
      if (resultTvRefund == null) {
        break missingId;
      }

      id = R.id.tvRefund;
      TextView tvRefund = ViewBindings.findChildViewById(rootView, id);
      if (tvRefund == null) {
        break missingId;
      }

      id = R.id.waitMessageRefund;
      TextView waitMessageRefund = ViewBindings.findChildViewById(rootView, id);
      if (waitMessageRefund == null) {
        break missingId;
      }

      return new ActivityRefundBinding((ConstraintLayout) rootView, amountTvRefund,
          newPaymentBtnRefund, progressBarRefund, refundTransferBtnRefund, resultIvRefund,
          resultTvRefund, tvRefund, waitMessageRefund);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
