// Generated by Dagger (https://dagger.dev).
package ru.mertech.sbpskb.ui.viewModels;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.mertech.repository.Repository;
import ru.mertech.sbpskb.utils.NetworkHelper;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShareViewModel_Factory implements Factory<ShareViewModel> {
  private final Provider<Repository> repositoryProvider;

  private final Provider<Application> applicationProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  public ShareViewModel_Factory(Provider<Repository> repositoryProvider,
      Provider<Application> applicationProvider, Provider<NetworkHelper> networkHelperProvider) {
    this.repositoryProvider = repositoryProvider;
    this.applicationProvider = applicationProvider;
    this.networkHelperProvider = networkHelperProvider;
  }

  @Override
  public ShareViewModel get() {
    return newInstance(repositoryProvider.get(), applicationProvider.get(), networkHelperProvider.get());
  }

  public static ShareViewModel_Factory create(Provider<Repository> repositoryProvider,
      Provider<Application> applicationProvider, Provider<NetworkHelper> networkHelperProvider) {
    return new ShareViewModel_Factory(repositoryProvider, applicationProvider, networkHelperProvider);
  }

  public static ShareViewModel newInstance(Repository repository, Application application,
      NetworkHelper networkHelper) {
    return new ShareViewModel(repository, application, networkHelper);
  }
}
