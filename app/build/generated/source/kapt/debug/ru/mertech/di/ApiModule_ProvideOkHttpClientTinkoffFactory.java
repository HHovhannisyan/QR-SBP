// Generated by Dagger (https://dagger.dev).
package ru.mertech.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("ru.mertech.di.ApiModule.OtherInterceptorOkHttpClient")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideOkHttpClientTinkoffFactory implements Factory<OkHttpClient> {
  @Override
  public OkHttpClient get() {
    return provideOkHttpClientTinkoff();
  }

  public static ApiModule_ProvideOkHttpClientTinkoffFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static OkHttpClient provideOkHttpClientTinkoff() {
    return Preconditions.checkNotNullFromProvides(ApiModule.INSTANCE.provideOkHttpClientTinkoff());
  }

  private static final class InstanceHolder {
    private static final ApiModule_ProvideOkHttpClientTinkoffFactory INSTANCE = new ApiModule_ProvideOkHttpClientTinkoffFactory();
  }
}
